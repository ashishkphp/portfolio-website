{"version":3,"sources":["components/Counter.js","components/ToggleText.js","components/ToggleTheme.js","components/ProductCard.js","components/Stopwatch.js","components/TemperatureConverter.js","components/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["Counter","count","serCount","useState","React","createElement","style","textalign","padding","onClick","increment","decrement","disabled","reset","ToggleText","isVisible","setIsVisible","ToggleTheme","darkMode","setDarkMode","backgroundColor","color","height","textAlign","toggleTheme","ProductCard","qty","setQty","toFixed","margin","Stopwatch","time","setTime","isActive","setIsActive","useEffect","interval","setInterval","prevTime","clearInterval","fontSize","getSeconds","slice","getMinutes","Math","floor","formatTime","TemperatureConverter","celsius","setCelsius","fahrenheit","setFahrenheit","type","placeholder","value","onChange","e","target","Dashboard","width","border","cellPadding","cellSpacing","App","className","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.5bba3edd.chunk.js","sourcesContent":["//Counter.js\n\nimport React, { useState } from 'react';\n\nconst Counter = () => {\n\tconst [count, serCount] = useState(0);\n\n\tconst increment = () => {\n\t\tserCount(count+1);\n\t};\n\n\tconst decrement = () => {\n\t\tserCount(count-1);\n\t};\n\n\tconst reset = () => {\n\t\tserCount(0);\n\t};\n\n\treturn (\n\t\t<div style={{ textalign: 'center', padding: '20px'}}>\n\t\t\t<h2>Counter: {count}</h2>\n\t\t\t<button onClick={increment}>Increment</button>\n\t\t\t<button onClick={decrement} disabled={count === 0 }>Decrement</button>\n\t\t\t<button onClick={reset}>Reset</button>\n\t\t</div>\n\t);\n};\n\nexport default Counter;","// ToggleText.js\n\nimport React, { useState } from 'react';\n\nconst ToggleText = () => {\n\tconst [isVisible, setIsVisible] = useState(false);\n\n\treturn (\n\n\t\t<div>\n\t\t\t<button onClick={ () => setIsVisible(!isVisible)}> { isVisible ? 'Hide' : 'Show'} Text </button>\n\t\t\t{ isVisible && <p> Hello, this is some toggle text!</p> }\n\t\t</div>\n\n\t);\n};\n\nexport default ToggleText;","// ToggleTheme.js\n\nimport React, { useState } from 'react';\n\nconst ToggleTheme = () => {\n\t\tconst [darkMode, setDarkMode] = useState(false);\n\n\t\tconst toggleTheme = () => setDarkMode(!darkMode);\n\n\t\treturn (\n\n\t\t\t<div style={{\n\t\t      backgroundColor: darkMode ? '#333' : '#FFF',\n\t\t      color: darkMode ? '#FFF' : '#000',\n\t\t      height: '15vh',\n\t\t      textAlign: 'center',\n\t\t      padding: '20px'\n\t\t    }}>\n\t\t    <h2> { darkMode ? 'Dark Mode' : 'Light Mode' } </h2>\n\t\t    <button onClick={toggleTheme}> Switch to { darkMode ? 'Light' : 'Dark'} Mode </button>\n\t\t    </div>\n\t); \n};\n\nexport default ToggleTheme;","import React, { useState } from 'react';\n\nconst ProductCard = () => {\n\tconst [qty, setQty] = useState(1);\n\tconst price = 10.0;\n\n\tconst increment = () => setQty(qty + 1);\n\tconst decrement = () => setQty(qty > 1 ? qty - 1 : 1);\n\n\treturn (\n\t\t<div>\n\t\t\t<h3>Product Name</h3>\n\t\t\t<p>Price: ${price.toFixed(2)}</p>\n\t\t\t\n\t\t\t<div>\n\t\t\t\t<button onClick={decrement}>-</button>\n\t\t\t\t<span style={{ margin: '0 10px' }}>{qty}</span>\n\t\t\t\t<button onClick={increment}>+</button>\n\t\t\t</div>\n\t\t\t\n\t\t\t<p>Total: ${ (price * qty).toFixed(2) }</p>\n\t\t</div>\n\t);\n};\n\nexport default ProductCard;\n","// src/components/Stopwatch.js\nimport React, { useState, useEffect } from 'react';\n\nconst Stopwatch = () => {\n\tconst [time, setTime] = useState(0); // time in seconds\n\tconst [isActive, setIsActive] = useState(false);\n\n\tuseEffect(() => {\n\t\tlet interval = null;\n\n\t\tif (isActive) {\n\t\t\tinterval = setInterval(() => {\n\t\t\t\tsetTime((prevTime) => prevTime + 1);\n\t\t\t}, 1000);\n\t\t} else if (!isActive && time !== 0) {\n\t\t\tclearInterval(interval);\n\t\t}\n\n\t\t// Stop at 9 hours (32400 seconds)\n\t\tif (time >= 32400) {\n\t\t\tclearInterval(interval);\n\t\t\tsetIsActive(false);\n\t\t}\n\n\t\treturn () => clearInterval(interval);\n\t}, [isActive, time]);\n\n\tconst formatTime = (time) => {\n\t\tconst getSeconds = `0${time % 60}`.slice(-2);\n\t\tconst minutes = Math.floor(time / 60);\n\t\tconst getMinutes = `0${minutes % 60}`.slice(-2);\n\t\tconst getHours = `0${Math.floor(time / 3600)}`.slice(-2);\n\t\treturn `${getHours}:${getMinutes}:${getSeconds}`;\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<h2>Stopwatch</h2>\n\t\t\t<p style={{ fontSize: '24px' }}>{formatTime(time)}</p>\n\t\t\t<div>\n\t\t\t\t<button onClick={() => setIsActive(true)}>Start</button>\n\t\t\t\t<button onClick={() => setIsActive(false)}>Pause</button>\n\t\t\t\t<button onClick={() => { setTime(0); setIsActive(false); }}>Reset</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Stopwatch;\n\n\n/*import React, { useState, useRef } from 'react';\n\nconst Stopwatch = () => {\n\n\tconst [time, setTime] = useState(0);\n\tconst [running, setRunning] = useState(false);\n\tconst timeRef = useRef(null);\n\n\tconst start = () => {\n\t\tif(!running){\n\t\t\tsetRunning(true);\n\t\t\ttimeRef.current = setInterval( () => setTime((prev) => prev + 1 ), 1000);\n\t\t}\n\t};\n\n\tconst stop = () => {\n\t\tsetRunning(false);\n\t\tclearInterval( timeRef.current);\n\t};\n\n\tconst reset = () => {\n\t\tsetRunning(false);\n\t\tclearInterval( timeRef.current);\n\t\tsetTime(0);\n\t};\n\n\treturn(\n\t\t<div>\n\t\t\t<h3>Stopwatch: {time}s</h3>\n\t\t\t<button onClick={start} disabled={running}>Start</button>\n\t\t\t<button onClick={stop} disabled={!running}>Stop</button>\n\t\t\t<button onClick={reset} >Reset</button>\n\t\t</div>\n\t);\n};\n\nexport default Stopwatch;*/","// src/components/TemperatureConverter.js\n\nimport React, { useState} from 'react';\n\nconst TemperatureConverter = () => {\n\n\tconst [celsius, setCelsius] = useState('');\n\tconst [fahrenheit, setFahrenheit] = useState('');\n\n\tconst handleCelsiusChange = (e) => {\n\n\t\tconst value = e.target.value;\n\t\tsetCelsius(value);\n\t\tsetFahrenheit((value * 9/5 + 32).toFixed(2));\n\n\t};\n\n\treturn(\n\n\t\t<div>\n\t\t\t<input \n\t\t\t\ttype=\"number\"\n\t\t\t\tplaceholder=\"Celsius\"\n\t\t\t\tvalue={celsius}\n\t\t\t\tonChange={handleCelsiusChange} />\n\t\t\t\t<p>{celsius}°C =  {fahrenheit}°F</p>\n\t\t</div>\n\n\t);\n\n};\n\nexport default TemperatureConverter;","\n// src/components/Dashboard.js\nimport React from 'react';\nimport Counter from './Counter'; \nimport ToggleText from './ToggleText';\nimport ToggleTheme from './ToggleTheme';\nimport ProductCard from './ProductCard';\nimport Stopwatch from './Stopwatch';\nimport TemperatureConverter from './TemperatureConverter';\n\nconst Dashboard = () => {\n  return (\n    <div style={{ padding: '20px' }}>\n      <div style={{ width: '100%', textAlign: 'center' }}>\n      <h1>React Components Dashboard</h1>\n      </div>\n      <table border=\"1\" cellPadding=\"10\" cellSpacing=\"0\" style={{ width: '100%', textAlign: 'center' }}>\n        <thead>\n          <tr>\n            <th>Component Name</th>\n            <th>Output</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td style={{ fontSize: '40px' }}>Temperature Converter</td>\n            <td ><TemperatureConverter /></td>\n          </tr> \n          <tr>\n            <td style={{ fontSize: '40px' }}>Stopwatch</td>\n            <td ><Stopwatch /></td>\n          </tr>\n          <tr>\n            <td style={{ fontSize: '40px' }}>Counter</td>\n            <td><Counter /></td>\n          </tr> \n          <tr>\n            <td style={{ fontSize: '40px' }}>Hide/Show Text</td>\n            <td><ToggleText /></td>\n          </tr>          \n          <tr>\n            <td style={{ fontSize: '40px' }}>Product Card</td>\n            <td><ProductCard /></td>\n          </tr>\n          <tr>\n            <td style={{ fontSize: '40px' }}>Light/Dark Mode</td>\n            <td><ToggleTheme /></td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Dashboard;","// src/App.js\nimport React from 'react';\nimport Dashboard from './components/Dashboard';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Dashboard />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}